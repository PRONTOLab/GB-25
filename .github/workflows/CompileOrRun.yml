name: "Compile or Run"

on:
  workflow_call:
    inputs:
      julia_version:
        description: 'Julia version'
        required: true
        default: ''
        type: string
      os:
        description: 'OS/Runner'
        required: true
        default: ''
        type: string
      sharded:
        description: 'Whether we are using sharding'
        required: false
        default: false
        type: boolean
      grid_name:
        description: 'What type of grid to use'
        required: false
        default: ''
        type: string
      xla_runtime:
        description: 'The XLA runtime'
        required: true
        default: ''
        type: string
      compile_or_run:
        description: 'We compile or run the code'
        required: true
        default: ''
        type: string
      earlyoom_threshold:
        description: 'earlyoom threshold'
        required: true
        default: 4
        type: number
      julia_optlevel:
        description: 'Julia optimization level'
        required: true
        default: 2
        type: number
      sim_type:
        description: 'ocean_climate or baroclinic_instability'
        required: true
        default: ''
        type: string

jobs:
  simulation:
    name: Julia ${{ inputs.julia_version }} - ${{ inputs.sim_type }} - ${{ inputs.os }} - ${{ inputs.xla_runtime }} - ${{ inputs.compile_or_run }}
    runs-on: ${{ inputs.os }}
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Install earlyoom
        if: ${{ startsWith(inputs.os, 'ubuntu') }}
        run: |
          sudo apt-get install -y earlyoom
      - uses: julia-actions/setup-julia@v2
        if: ${{ startsWith(inputs.os, 'ubuntu') }}
        with:
          version: ${{ inputs.julia_version }}
      - uses: julia-actions/cache@v2
        if: ${{ startsWith(inputs.os, 'ubuntu') }}
        with:
          cache-name: julia-cache;workflow=${{ inputs.julia_version }}-${{ inputs.sim_type }}-${{ inputs.os }}-${{ inputs.xla_runtime }}-${{ inputs.compile_or_run }};job=${{ github.job }}
      - name: Collect Workflow Telemetry
        uses: catchpoint/workflow-telemetry-action@v2
        with:
          comment_on_pr: false
          job_summary: true
      - name: Set XLA runtime
        run: |
          cat <<EOF > LocalPreferences.toml
          [Reactant]
          xla_runtime = "${{ inputs.xla_runtime }}"
          EOF
      - name: Instantiate environment
        timeout-minutes: 90
        shell: julia --color=yes --project {0}
        run: |
          using Pkg
          Pkg.Registry.update()
          # Pkg.add([
          #     PackageSpec(; name="Reactant", rev="main"),
          #     PackageSpec(; name="ReactantCore", rev="main"),
          #     PackageSpec(; name="Oceananigans", rev="main"),
          #     PackageSpec(; name="ClimaOcean", rev="main"),
          # ])
          Pkg.instantiate()
      - name: Upload project environment
        uses: actions/upload-artifact@v4
        timeout-minutes: 10
        if: ${{ always() }}
        with:
          name: 'environment-${{ inputs.sim_type }}-${{ inputs.julia_version }}-${{ inputs.os }}-${{ inputs.xla_runtime }}-${{ inputs.compile_or_run }}'
          path: |
            Manifest.toml
            Project.toml
          retention-days: 90
          overwrite: false
      - name: Ocean climate simulation
        timeout-minutes: 180
        env:
          grid_name: ${{ inputs.grid_name }}
          XLA_FLAGS: ${{ inputs.sharded && '--xla_force_host_platform_device_count=4 --xla_dump_to=xla_dump' || '--xla_dump_to=xla_dump' }}
          RUNDIR: ${{ inputs.sharded && 'sharding' || 'simulations' }}
        run: |
          earlyoom -m ${{ inputs.earlyoom_threshold }} -s 100 -r 120 --prefer 'julia' &
          julia --color=yes --project -O${{ inputs.julia_optlevel }} $RUNDIR/${{ inputs.sim_type }}_simulation_${{ inputs.compile_or_run }}.jl
      - name: Show remaining jit calls
        if: ${{ inputs.compile_or_run == 'compile' }}
        timeout-minutes: 10
        run: |
          JIT_CALLS=$(find . -name 'opt_${{ inputs.sim_type }}.mlir' -exec grep 'enzymexla\.jit_call' '{}' \;)
          NUM_JIT_CALLS=$(echo "${JIT_CALLS}" | wc -l | xargs)
          if [[ -n "${JIT_CALLS}" ]]; then
              MSG="There are ${NUM_JIT_CALLS} remaining jit calls"
              echo "::error title=Remaining JIT Calls:: ${MSG}"
              echo
              echo "----------"
              echo "${JIT_CALLS}"
              echo "----------"
              exit 1
          fi
      - name: Upload MLIR modules
        uses: actions/upload-artifact@v4
        timeout-minutes: 10
        if: ${{ always() }}
        with:
          name: 'simulation-mlir-${{ inputs.sim_type }}-${{ inputs.grid_name }}-${{ inputs.julia_version }}-${{ inputs.os }}-${{ inputs.xla_runtime }}'
          path: '**/*.mlir'
          retention-days: 90
          overwrite: false
      - name: Upload Julia profiler traces
        uses: actions/upload-artifact@v4
        timeout-minutes: 10
        if: ${{ always() && inputs.compile_or_run == 'compile' }}
        with:
          name: 'simulation-julia-profile-${{ inputs.sim_type }}-${{ inputs.grid_name }}-${{ inputs.julia_version }}-${{ inputs.os }}-${{ inputs.xla_runtime }}'
          path: |
            **/profile_*.txt
            **/profile_*.dat
          retention-days: 90
          overwrite: false
      - name: Upload XLA dump
        uses: actions/upload-artifact@v4
        timeout-minutes: 10
        if: ${{ always() && inputs.compile_or_run == 'run' }}
        with:
          name: 'simulation-xla-dump-${{ inputs.sim_type }}-${{ inputs.grid_name }}-${{ inputs.julia_version }}-${{ inputs.os }}-${{ inputs.xla_runtime }}'
          path: '**/xla_dump'
          retention-days: 90
          overwrite: false
      - name: Upload XLA profiler traces
        uses: actions/upload-artifact@v4
        timeout-minutes: 10
        if: ${{ always() && inputs.compile_or_run == 'run' }}
        with:
          name: 'simulation-xla-profile-${{ inputs.sim_type }}-${{ inputs.grid_name }}-${{ inputs.julia_version }}-${{ inputs.os }}-${{ inputs.xla_runtime }}'
          path: '**/plugins'
          retention-days: 90
          overwrite: false

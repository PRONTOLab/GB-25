name: "Compile or Run"

on:
  workflow_call:
    inputs:
      julia_version:
        description: 'Julia version'
        required: true
        default: ''
        type: string
      os:
        description: 'OS/Runner'
        required: true
        default: ''
        type: string
      xla_runtime:
        description: 'The XLA runtime'
        required: true
        default: ''
        type: string
      compile_or_run:
        description: 'We compile or run the code'
        required: true
        default: ''
        type: string
      earlyoom_threshold:
        description: 'earlyoom threshold'
        required: true
        default: 4
        type: number
      julia_optlevel:
        description: 'Julia optimization level'
        required: true
        default: 2
        type: number
      sim_type:
        description: 'ocean_climate or baroclinic_instability'
        required: true
        default: ''
        type: string

jobs:
  simulation:
    runs-on: ${{ inputs.os }}
    strategy:
      fail-fast: false
    uses: ./.github/workflows/Setup.yml
    with: 
      os: ${{ inputs.os }}
      julia_version: ${{ inputs.julia_version }}
      xla_runtime: ${{ inputs.xla_runtime }}
      sim_type: ${{ inputs.sim_type }}
      compile_or_run: ${{ inputs.compile_or_run }}

  run_simulation:
    runs-on: ${{ inputs.os }}
    name: Julia ${{ inputs.julia_version }} - ${{ inputs.sim_type }} - ${{ inputs.os }} - ${{ inputs.xla_runtime }} - ${{ inputs.compile_or_run }}
    steps:
      - name: Ocean climate simulation
        timeout-minutes: 180
        run: |
          earlyoom -m ${{ inputs.earlyoom_threshold }} -s 100 -r 120 --prefer 'julia' &
          julia --color=yes --project -O${{ inputs.julia_optlevel }} simulations/${{ inputs.sim_type }}_simulation_${{ inputs.compile_or_run }}.jl

          julia --color=yes --project -O${{ inputs.julia_optlevel }} simulations/ocean_climate_simulation_${{ inputs.compile_or_run }}.jl
        env:
          XLA_FLAGS: "--xla_dump_to=xla_dump"
      - name: Show remaining jit calls
        if: ${{ inputs.compile_or_run == 'compile' }}
        timeout-minutes: 10
        run: |
          JIT_CALLS=$(find . -name 'opt_${{ inputs.sim_type }}.mlir' -exec grep 'enzymexla\.jit_call' '{}' \;)
          NUM_JIT_CALLS=$(echo "${JIT_CALLS}" | wc -l | xargs)
          if [[ -n "${JIT_CALLS}" ]]; then
              MSG="There are ${NUM_JIT_CALLS} remaining jit calls"
              echo "::error title=Remaining JIT Calls:: ${MSG}"
              echo
              echo "----------"
              echo "${JIT_CALLS}"
              echo "----------"
              exit 1
          fi
      - name: Upload MLIR modules
        uses: actions/upload-artifact@v4
        timeout-minutes: 10
        if: ${{ always() }}
        with:
          name: 'simulation-mlir-${{ inputs.sim_type }}-${{ inputs.julia_version }}-${{ inputs.os }}-${{ inputs.xla_runtime }}'
          path: '**/*.mlir'
          retention-days: 90
          overwrite: false
      - name: Upload Julia profiler traces
        uses: actions/upload-artifact@v4
        timeout-minutes: 10
        if: ${{ always() && inputs.compile_or_run == 'compile' }}
        with:
          name: 'simulation-julia-profile-${{ inputs.sim_type }}-${{ inputs.julia_version }}-${{ inputs.os }}-${{ inputs.xla_runtime }}'
          path: |
            **/profile_*.txt
            **/profile_*.dat
          retention-days: 90
          overwrite: false
      - name: Upload XLA dump
        uses: actions/upload-artifact@v4
        timeout-minutes: 10
        if: ${{ always() && inputs.compile_or_run == 'run' }}
        with:
          name: 'simulation-xla-dump-${{ inputs.sim_type }}-${{ inputs.julia_version }}-${{ inputs.os }}-${{ inputs.xla_runtime }}'
          path: '**/xla_dump'
          retention-days: 90
          overwrite: false
      - name: Upload XLA profiler traces
        uses: actions/upload-artifact@v4
        timeout-minutes: 10
        if: ${{ always() && inputs.compile_or_run == 'run' }}
        with:
          name: 'simulation-xla-profile-${{ inputs.sim_type }}-${{ inputs.julia_version }}-${{ inputs.os }}-${{ inputs.xla_runtime }}'
          path: '**/plugins'
          retention-days: 90
          overwrite: false

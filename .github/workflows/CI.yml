name: CI

on:
  pull_request:
    paths:
      - '.github/workflows/CI.yml'
      - 'ocean-climate-simulation/ocean_climate_simulation_mlir.jl'
      - 'Project.toml'
      - 'src/**'
  push:
    branches:
      - main
      - release-*
    tags: '*'
    paths:
      - '.github/workflows/CI.yml'
      - 'ocean-climate-simulation/ocean_climate_simulation_mlir.jl'
      - 'Project.toml'
      - 'src/**'
  workflow_dispatch:
  schedule:
    - cron: '12 07,19 * * *'

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  ocean_climate_simulation_mlir:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.10'
          - '1.11'
        os:
          - ubuntu-24.04
          # - ubuntu-22.04-arm
    steps:
      - uses: actions/checkout@v4
      - name: Install earlyoom
        run: |
          sudo apt-get install -y earlyoom
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
      - uses: julia-actions/cache@v2
      - name: Collect Workflow Telemetry
        uses: catchpoint/workflow-telemetry-action@v2
        with:
          comment_on_pr: false
          job_summary: true
      - name: Instantiate environment
        timeout-minutes: 60
        shell: julia --color=yes --project {0}
        run: |
          using Pkg
          Pkg.Registry.update()
          Pkg.add([
              PackageSpec(; name="Reactant", rev="main"),
              # PackageSpec(; name="Oceananigans", rev="main"),
              # PackageSpec(; name="ClimaOcean", rev="main"),
          ])
          Pkg.instantiate()
      - name: Upload project environment
        uses: actions/upload-artifact@v4
        timeout-minutes: 10
        if: ${{ always() }}
        with:
          name: 'environment-${{ matrix.version }}-${{ matrix.os }}'
          path: |
            Manifest.toml
            Project.toml
          retention-days: 90
          overwrite: false
      - name: Run ocean climate simulation, generate MLIR code and profile traces
        timeout-minutes: 180
        run: |
          earlyoom -m 4 -s 100 -r 120 --prefer 'julia' &
          julia --color=yes --project ocean-climate-simulation/ocean_climate_simulation_mlir.jl
      - name: Show remaining jit calls
        timeout-minutes: 10
        run: |
          JIT_CALLS=$(find . -name 'opt_ocean_climate_simulation.mlir' -exec grep 'enzymexla\.jit_call' '{}' \;)
          NUM_JIT_CALLS=$(echo "${JIT_CALLS}" | wc -l | xargs)
          if [[ -n "${JIT_CALLS}" ]]; then
              MSG="There are ${NUM_JIT_CALLS} remaining jit calls"
              echo  "${MSG}:"
              echo "::warning title=Remaining JIT Calls:: ${MSG}"
              echo
              echo "----------"
              echo "${JIT_CALLS}"
              echo "----------"
          fi
      - name: Upload MLIR code
        uses: actions/upload-artifact@v4
        timeout-minutes: 10
        if: ${{ always() }}
        with:
          name: 'ocean-simulation-mlir-${{ matrix.version }}-${{ matrix.os }}'
          path: '**/*.mlir'
          retention-days: 90
          overwrite: false
      - name: Upload profile traces
        uses: actions/upload-artifact@v4
        timeout-minutes: 10
        if: ${{ always() }}
        with:
          name: 'ocean-simulation-profile-${{ matrix.version }}-${{ matrix.os }}'
          path: |
            **/profile_*.txt
            **/profile_*.dat
          retention-days: 90
          overwrite: false
